
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
         &kp GRAVE     &kp N1    &kp N2    &kp N3     &kp N4     &kp N5              &kp ESC  &kp DEL            &kp N6         &kp N7     &kp N8             &kp N9             &kp N0      &kp MINUS
           &kp TAB      &kp Q     &kp W     &kp E      &kp R      &kp T             &kp LEFT   &kp UP             &kp Y          &kp U      &kp I              &kp O              &kp P      &kp EQUAL
  &kp LEFT_BRACKET      &kp A     &kp S     &kp D      &kp F      &kp G            &kp RIGHT    &sl 1  &kp LEFT_COMMAND &none &none &kp RIGHT_COMMAND              &sl 1       &kp DOWN              &kp H         &kp J      &kp K    &kp L  &kp SEMI        &kp SQT
 &kp RIGHT_BRACKET      &kp Z     &kp X     &kp C      &kp V      &kp B                &none    &none    &kp LEFT_SHIFT          &none      &none    &kp RIGHT_SHIFT              &none          &none              &kp N         &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
      &kp CAPSLOCK  &kp LCTRL  &kp LALT  &kp LCMD  &kp LSHFT  &kp SPACE              &kp TAB    &mo 2             &mo 2  &kp BACKSPACE  &kp ENTER    &kp RIGHT_SHIFT  &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp CAPSLOCK
            >;
        };

        layer_esab {
            bindings = <
        &kp MINUS             &kp N0         &kp N9             &kp N8           &kp N7     &kp N6                  &kp DEL   &kp ESC             &kp N5   &kp N4     &kp N3            &kp N2            &kp N1     &kp GRAVE
        &kp EQUAL              &kp P          &kp O              &kp I            &kp U      &kp Y                   &kp UP  &kp LEFT              &kp T    &kp R      &kp E             &kp W             &kp Q       &kp TAB
 &kp SINGLE_QUOTE      &kp SEMICOLON          &kp L              &kp K            &kp J      &kp H                 &kp DOWN    &trans  &kp RIGHT_COMMAND &none &none &kp LEFT_COMMAND            &trans     &kp RIGHT             &kp G         &kp F   &kp D   &kp S   &kp A   &kp LEFT_BRACKET
    &kp BACKSLASH          &kp SLASH        &kp DOT          &kp COMMA            &kp M      &kp N                    &none     &none    &kp RIGHT_SHIFT    &none      &none    &kp LEFT_SHIFT             &none         &none             &kp B         &kp V   &kp C   &kp X   &kp Z  &kp RIGHT_BRACKET
     &kp CAPSLOCK  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_COMMAND  &kp RIGHT_SHIFT  &kp ENTER            &kp BACKSPACE     &mo 3              &mo 3  &kp TAB  &kp SPACE    &kp LEFT_SHIFT  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp CAPSLOCK
            >;
        };

        layer_fn {
            bindings = <
               &kp F1                &kp F2                             &kp F3           &kp F4               &kp F5        &kp F6            &rgb_ug RGB_TOG  &kp C_POWER                  &kp F7            &kp F8      &kp F9                 &kp F10       &kp F11       &kp F12
 &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_SEARCH  &kp C_VOICE_COMMAND  &kp K_CANCEL                &kp PAGE_UP     &kp HOME              &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT              &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP
         &bt BT_SEL 0          &bt BT_SEL 2                              &none           &kp UP                &none  &bt BT_SEL 4              &kp PAGE_DOWN        &sl 3             &bootloader &none &none &bootloader         &sl 3       &kp END  &bl BL_INC  &kp KP_N5  &kp KP_N8    &kp F12  &trans  &trans
         &bt BT_SEL 1          &bt BT_SEL 3                           &kp LEFT         &kp DOWN            &kp RIGHT    &bt BT_CLR                      &none        &none  &rgb_ug RGB_MEFS_CMD 5             &none       &none  &rgb_ug RGB_MEFS_CMD 5         &none         &none  &bl BL_DEC  &kp KP_N4  &kp KP_N2  &kp KP_N6  &trans  &trans
               &tog 0                &trans                             &trans           &trans               &trans        &trans                 &bl BL_TOG       &trans                  &trans            &trans      &trans                  &trans        &trans        &trans      &trans     &trans
            >;
        };

        layer_nf {
            bindings = <
      &kp F12       &kp F11     &kp F10      &kp F9     &kp F8      &kp F7            &kp C_PWR  &rgb_ug RGB_TOG                  &kp F6               &kp F5           &kp F4                             &kp F3        &kp F2        &kp F1
 &kp C_VOL_UP  &kp C_VOL_DN  &kp C_MUTE  &kp C_NEXT   &kp C_PP  &kp C_PREV             &kp HOME        &kp PG_UP            &kp K_CANCEL  &kp C_VOICE_COMMAND  &kp C_AC_SEARCH  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_BRI_UP  &kp C_BRI_DN
       &trans        &trans     &kp F12   &kp KP_N8  &kp KP_N5  &bl BL_INC              &kp END           &trans             &bootloader &none &none &bootloader        &trans     &kp PG_DN  &bt BT_SEL 4     &none    &kp UP      &none  &bt BT_SEL 2  &bt BT_SEL 0
       &trans        &trans   &kp KP_N4   &kp KP_N2  &kp KP_N6  &bl BL_DEC                &none            &none  &rgb_ug RGB_MEFS_CMD 5                &none            &none             &rgb_ug RGB_MEFS_CMD 5         &none         &none    &bt BT_CLR  &kp LEFT  &kp DOWN  &kp RIGHT  &bt BT_SEL 3  &bt BT_SEL 1
       &trans        &trans      &trans      &trans     &trans      &trans               &trans           &trans                  &trans           &bl BL_TOG           &trans                             &trans        &trans        &trans        &trans    &tog 0
            >;
        };

    };
};
